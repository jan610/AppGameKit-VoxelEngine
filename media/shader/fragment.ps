uniform sampler2D texture0;

varying highp vec3 posVarying;
varying mediump vec2 uvVarying;
//~varying mediump vec3 normalVarying;
varying highp vec4 colorVarying;
//~varying highp vec4 boundsVarying;

mediump vec3 ApplyFog(mediump vec3 color, highp vec3 pointPos);

//~vec4 fourTapSample(vec2 tileOffset,vec2 tileUV,float tileSize,sampler2D atlas)
//~{
//~	//Initialize accumulators
//~	vec4 color = vec4(0.0);
//~	float totalWeight = 0.0;
//~	
//~	for(int dx=0; dx<2; ++dx)
//~	{
//~		for(int dy=0; dy<2; ++dy)
//~		{
//~			//Compute coordinate in 2x2 tile patch
//~			vec2 tileCoord = 2.0 * fract(0.5 * (tileUV + vec2(dx,dy)));
//~			
//~			//Weight sample based on distance to center
//~			float w = pow(1.0 - max(abs(tileCoord.x-1.0), abs(tileCoord.y-1.0)), 16.0);
//~			
//~			//Compute atlas coord
//~			vec2 atlasUV = tileOffset + tileSize * tileCoord;
//~			
//~			//Sample and accumulate
//~			color += w * texture2D(atlas, atlasUV);
//~			totalWeight += w;
//~		}
//~	}
//~	
//~	//Return weighted color
//~	return color / totalWeight;
//~}

//~vec2 getTexCoord(vec3 norm, vec3 pos)
//~{
//~	vec2 tileOffset = boundsVarying.zw;
//~    vec2 tileUV = vec2(dot(norm.zxy, pos), dot(norm.yzx, pos));
//~    return tileOffset + (1.0/16.0) * fract(tileUV);
//~}

void main()
{
//~	vec2 texCoord = getTexCoord(normalVarying, posVarying);
//~	mediump vec4 color = fourTapSample(boundsVarying.zw, texCoord, boundsVarying.x, texture0) * colorVarying;
	
    mediump vec4 color = texture2D(texture0, uvVarying) * colorVarying;
    color.rgb = ApplyFog( color.rgb, posVarying );

    gl_FragColor = color;
}

//~uniform sampler2D texture0;

//~varying highp vec3 posVarying;
//~varying mediump vec3 normalVarying;
//~varying mediump vec2 uvVarying;
//~varying mediump vec3 lightVarying;
//~varying highp vec4 colorVarying;

//~mediump vec3 GetPSLighting( mediump vec3 normal, highp vec3 pos );
//~mediump vec3 ApplyFog( mediump vec3 color, highp vec3 pointPos );

//~void main()
//~{
//~    mediump vec3 norm = normalize(normalVarying);
//~    mediump vec3 light = lightVarying + GetPSLighting( norm, posVarying );

//~    mediump vec3 color = texture2D(texture0, uvVarying).rgb * colorVarying.rgb * light;
//~    color = ApplyFog( color, posVarying );

//~    gl_FragColor = vec4(color,1.0);
//~}